"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.describe = exports.command = void 0;
var chalk = require("chalk");
var helpers_1 = require("./helpers");
exports.command = 'check-remote';
exports.describe = 'Check if repo has remote commits';
var handler = function () {
    return helpers_1.run('git rev-parse --is-inside-work-tree')
        .then(function () {
        return helpers_1.run('git ls-remote --exit-code --heads')
            .then(function () {
            return Promise.all([
                helpers_1.run('git rev-parse @'),
                helpers_1.run('git rev-parse @{u}'),
                helpers_1.run('git merge-base @ @{u}'),
            ])
                .then(function (values) {
                var $local = values[0].stdout, $remote = values[1].stdout, $base = values[2].stdout;
                /* istanbul ignore else */
                if ($local === $remote) {
                    console.log(chalk.green('✔ Repo is up-to-date!'));
                }
                else if ($local === $base) {
                    console.log(chalk.red('⊘ You need to pull, there are new commits.'));
                    process.exit(1);
                }
            })
                .catch(function (error) {
                if (error.message.includes('no upstream configured ')) {
                    console.log(chalk.yellow('⚠ No upstream'));
                }
                else if (error.message.includes("fatal: ambiguous argument '@'")) {
                    console.log(chalk.yellow('⚠ No local commits'));
                }
                else {
                    console.log(chalk.yellow("\u26A0 Warning: " + error.message));
                }
            });
        })
            .catch(function () {
            console.log(chalk.yellow("\u26A0 No remote"));
        });
    })
        .catch(function () {
        console.log(chalk.yellow('⚠ not under git'));
    });
};
exports.handler = handler;
//# sourceMappingURL=check-remote.js.map