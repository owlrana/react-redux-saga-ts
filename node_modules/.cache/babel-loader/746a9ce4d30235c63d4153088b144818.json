{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport transitions, { classNames } from './transitions';\n\nfunction Transition(_ref) {\n  let {\n    children,\n    className,\n    style,\n    transition,\n    ...rest\n  } = _ref;\n  const Component = transitions[transition];\n\n  if (!Component) {\n    console.error(`Invalid transition: ${transition}`); // eslint-disable-line no-console\n\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(TransitionGroup, {\n    className: className,\n    style: style\n  }, React.Children.toArray(children).filter(child => !!child).map((child, key) => /*#__PURE__*/React.createElement(CSSTransition, _extends({\n    key: key,\n    classNames: classNames[transition]\n  }, rest), /*#__PURE__*/React.createElement(Component, null, child))));\n}\n\n_c = Transition;\nTransition.defaultProps = {\n  appear: true,\n  enter: true,\n  exit: true,\n  timeout: 300,\n  transition: 'fade'\n};\nexport default Transition;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transition\");","map":{"version":3,"sources":["/Users/rahulrana/react-redux-saga-boilerplate/src/components/Transition/index.tsx"],"names":["React","CSSTransition","TransitionGroup","transitions","classNames","Transition","children","className","style","transition","rest","Component","console","error","Children","toArray","filter","child","map","key","defaultProps","appear","enter","exit","timeout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AAIA,OAAOC,WAAP,IAAsBC,UAAtB,QAAwC,eAAxC;;AAaA,SAASC,UAAT,OAAgF;AAAA,MAA5D;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA,UAA9B;AAA0C,OAAGC;AAA7C,GAA4D;AAC9E,QAAMC,SAAS,GAAGR,WAAW,CAACM,UAAD,CAA7B;;AAEA,MAAI,CAACE,SAAL,EAAgB;AACdC,IAAAA,OAAO,CAACC,KAAR,CAAe,uBAAsBJ,UAAW,EAAhD,EADc,CACsC;;AAEpD,WAAO,IAAP;AACD;;AAED,sBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAEF,SAA5B;AAAuC,IAAA,KAAK,EAAEC;AAA9C,KACGR,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBT,QAAvB,EACEU,MADF,CACSC,KAAK,IAAI,CAAC,CAACA,KADpB,EAEEC,GAFF,CAEM,CAACD,KAAD,EAAQE,GAAR,kBACH,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,GAApB;AAAyB,IAAA,UAAU,EAAEf,UAAU,CAACK,UAAD;AAA/C,KAAiEC,IAAjE,gBACE,oBAAC,SAAD,QAAYO,KAAZ,CADF,CAHH,CADH,CADF;AAWD;;KApBQZ,U;AAsBTA,UAAU,CAACe,YAAX,GAA0B;AACxBC,EAAAA,MAAM,EAAE,IADgB;AAExBC,EAAAA,KAAK,EAAE,IAFiB;AAGxBC,EAAAA,IAAI,EAAE,IAHkB;AAIxBC,EAAAA,OAAO,EAAE,GAJe;AAKxBf,EAAAA,UAAU,EAAE;AALY,CAA1B;AAQA,eAAeJ,UAAf","sourcesContent":["import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport { Transitions } from 'types';\n\nimport transitions, { classNames } from './transitions';\n\ninterface Props {\n  appear: boolean;\n  children: React.ReactNode;\n  className?: string;\n  enter: boolean;\n  exit: boolean;\n  style?: React.CSSProperties;\n  timeout: number;\n  transition: Transitions;\n}\n\nfunction Transition({ children, className, style, transition, ...rest }: Props) {\n  const Component = transitions[transition];\n\n  if (!Component) {\n    console.error(`Invalid transition: ${transition}`); // eslint-disable-line no-console\n\n    return null;\n  }\n\n  return (\n    <TransitionGroup className={className} style={style}>\n      {React.Children.toArray(children)\n        .filter(child => !!child)\n        .map((child, key) => (\n          <CSSTransition key={key} classNames={classNames[transition]} {...rest}>\n            <Component>{child}</Component>\n          </CSSTransition>\n        ))}\n    </TransitionGroup>\n  );\n}\n\nTransition.defaultProps = {\n  appear: true,\n  enter: true,\n  exit: true,\n  timeout: 300,\n  transition: 'fade',\n};\n\nexport default Transition;\n"]},"metadata":{},"sourceType":"module"}