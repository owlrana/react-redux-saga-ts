{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useUpdateEffect } from 'react-use';\nimport { selectApp, selectGitHub } from 'selectors';\nimport styled from 'styled-components';\nimport { Button, ButtonGroup, Flex, Grid, Heading, Image, Link, Paragraph, responsive } from 'styled-minimal';\nimport useTreeChanges from 'tree-changes-hook';\nimport { useAppSelector } from 'modules/hooks';\nimport theme, { appColor, spacer } from 'modules/theme';\nimport { topic } from 'config';\nimport { STATUS } from 'literals';\nimport { getRepos, setAppOptions, showAlert } from 'actions';\nimport Loader from 'components/Loader';\nconst Item = styled(Link).withConfig({\n  displayName: \"Item\",\n  componentId: \"sc-jn8jzz-0\"\n})([\"align-items:center;border:solid 0.1rem \", \";border-radius:0.4rem;display:flex;flex-direction:column;overflow:hidden;padding:\", \";text-align:center;width:100%;\", \";p{color:#000;}img{height:8rem;margin-bottom:\", \";}\"], appColor, spacer(3), responsive({\n  md: {\n    padding: spacer(3)\n  },\n  lg: {\n    padding: spacer(4)\n  }\n}), spacer(2));\n_c = Item;\nconst ItemHeader = styled.div.withConfig({\n  displayName: \"ItemHeader\",\n  componentId: \"sc-jn8jzz-1\"\n})([\"margin-bottom:\", \";small{color:\", \";}\"], spacer(3), theme.colors.gray60);\n_c2 = ItemHeader;\n\nfunction GitHub() {\n  _s();\n\n  const dispatch = useDispatch();\n  const gitHub = useAppSelector(selectGitHub);\n  const {\n    query\n  } = useAppSelector(selectApp);\n  const {\n    changed\n  } = useTreeChanges(gitHub.topics[query] || topic);\n  const {\n    data = [],\n    message = '',\n    status = STATUS.IDLE\n  } = gitHub.topics[query] || topic;\n  useEffect(() => {\n    dispatch(getRepos(query));\n  }, [dispatch, query]);\n  useUpdateEffect(() => {\n    if (changed('status', STATUS.ERROR)) {\n      dispatch(showAlert(message, {\n        variant: 'danger'\n      }));\n    }\n  }, [changed, dispatch, message]);\n  const handleClick = useCallback(event => {\n    const {\n      value = ''\n    } = event.currentTarget.dataset;\n    dispatch(setAppOptions({\n      query: value\n    }));\n  }, [dispatch]);\n  const isRunning = status === STATUS.RUNNING;\n  let output;\n\n  if (status === STATUS.SUCCESS) {\n    output = data.length ? /*#__PURE__*/React.createElement(Grid, {\n      \"data-testid\": \"GitHubGrid\",\n      \"data-value\": query,\n      gridGap: {\n        _: spacer(2),\n        sm: spacer(3),\n        xl: spacer(4)\n      },\n      gridTemplateColumns: {\n        _: '100%',\n        md: 'repeat(2, 1fr)',\n        lg: 'repeat(3, 1fr)',\n        xl: 'repeat(4, 1fr)'\n      },\n      m: \"0 auto\",\n      mt: 5,\n      padding: 0,\n      width: {\n        _: '100%',\n        sm: '90%'\n      }\n    }, data.map(d => /*#__PURE__*/React.createElement(Item, {\n      key: d.id,\n      href: d.html_url,\n      target: \"_blank\"\n    }, /*#__PURE__*/React.createElement(Image, {\n      alt: d.owner.login,\n      src: d.owner.avatar_url\n    }), /*#__PURE__*/React.createElement(ItemHeader, null, /*#__PURE__*/React.createElement(Heading, {\n      as: \"h5\",\n      h: 100,\n      lineHeight: 1\n    }, d.name), /*#__PURE__*/React.createElement(\"small\", null, d.owner.login)), /*#__PURE__*/React.createElement(Paragraph, null, d.description)))) : /*#__PURE__*/React.createElement(\"h3\", null, \"Nothing found\");\n  } else {\n    output = /*#__PURE__*/React.createElement(Loader, {\n      block: true\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: \"GitHub\",\n    \"data-testid\": \"GitHubWrapper\"\n  }, /*#__PURE__*/React.createElement(Flex, {\n    justifyContent: \"center\"\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    \"aria-label\": \"GitHub Selector\",\n    \"data-testid\": \"GitHubSelector\",\n    role: \"group\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    busy: query === 'react' && isRunning,\n    \"data-value\": \"react\",\n    invert: query !== 'react',\n    onClick: handleClick,\n    size: \"lg\"\n  }, \"React\"), /*#__PURE__*/React.createElement(Button, {\n    busy: query === 'redux' && isRunning,\n    \"data-value\": \"redux\",\n    invert: query !== 'redux',\n    onClick: handleClick,\n    size: \"lg\"\n  }, \"Redux\"))), output);\n}\n\n_s(GitHub, \"a8uYCeJ8mZAx80yoxrokwxh11cY=\", false, function () {\n  return [useDispatch, useAppSelector, useAppSelector, useTreeChanges, useUpdateEffect];\n});\n\n_c3 = GitHub;\nexport default GitHub;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"ItemHeader\");\n$RefreshReg$(_c3, \"GitHub\");","map":{"version":3,"sources":["/Users/rahulrana/react-redux-saga-ts/src/containers/GitHub.tsx"],"names":["React","useCallback","useEffect","useDispatch","useUpdateEffect","selectApp","selectGitHub","styled","Button","ButtonGroup","Flex","Grid","Heading","Image","Link","Paragraph","responsive","useTreeChanges","useAppSelector","theme","appColor","spacer","topic","STATUS","getRepos","setAppOptions","showAlert","Loader","Item","md","padding","lg","ItemHeader","div","colors","gray60","GitHub","dispatch","gitHub","query","changed","topics","data","message","status","IDLE","ERROR","variant","handleClick","event","value","currentTarget","dataset","isRunning","RUNNING","output","SUCCESS","length","_","sm","xl","map","d","id","html_url","owner","login","avatar_url","name","description"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useUpdateEffect } from 'react-use';\nimport { selectApp, selectGitHub } from 'selectors';\nimport styled from 'styled-components';\nimport {\n  Button,\n  ButtonGroup,\n  Flex,\n  Grid,\n  Heading,\n  Image,\n  Link,\n  Paragraph,\n  responsive,\n} from 'styled-minimal';\nimport useTreeChanges from 'tree-changes-hook';\n\nimport { useAppSelector } from 'modules/hooks';\nimport theme, { appColor, spacer } from 'modules/theme';\n\nimport { topic } from 'config';\nimport { STATUS } from 'literals';\n\nimport { getRepos, setAppOptions, showAlert } from 'actions';\n\nimport Loader from 'components/Loader';\n\nconst Item = styled(Link)`\n  align-items: center;\n  border: solid 0.1rem ${appColor};\n  border-radius: 0.4rem;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  padding: ${spacer(3)};\n  text-align: center;\n  width: 100%;\n  /* stylelint-disable */\n  ${responsive({\n    md: {\n      padding: spacer(3),\n    },\n    lg: {\n      padding: spacer(4),\n    },\n  })};\n  /* stylelint-enable */\n\n  p {\n    color: #000;\n  }\n\n  img {\n    height: 8rem;\n    margin-bottom: ${spacer(2)};\n  }\n`;\n\nconst ItemHeader = styled.div`\n  margin-bottom: ${spacer(3)};\n\n  small {\n    color: ${theme.colors.gray60};\n  }\n`;\n\nfunction GitHub() {\n  const dispatch = useDispatch();\n  const gitHub = useAppSelector(selectGitHub);\n  const { query } = useAppSelector(selectApp);\n\n  const { changed } = useTreeChanges(gitHub.topics[query] || topic);\n\n  const { data = [], message = '', status = STATUS.IDLE } = gitHub.topics[query] || topic;\n\n  useEffect(() => {\n    dispatch(getRepos(query));\n  }, [dispatch, query]);\n\n  useUpdateEffect(() => {\n    if (changed('status', STATUS.ERROR)) {\n      dispatch(showAlert(message, { variant: 'danger' }));\n    }\n  }, [changed, dispatch, message]);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      const { value = '' } = event.currentTarget.dataset;\n\n      dispatch(setAppOptions({ query: value }));\n    },\n    [dispatch],\n  );\n\n  const isRunning = status === STATUS.RUNNING;\n  let output;\n\n  if (status === STATUS.SUCCESS) {\n    output = data.length ? (\n      <Grid\n        data-testid=\"GitHubGrid\"\n        data-value={query}\n        gridGap={{\n          _: spacer(2),\n          sm: spacer(3),\n          xl: spacer(4),\n        }}\n        gridTemplateColumns={{\n          _: '100%',\n          md: 'repeat(2, 1fr)',\n          lg: 'repeat(3, 1fr)',\n          xl: 'repeat(4, 1fr)',\n        }}\n        m=\"0 auto\"\n        mt={5}\n        padding={0}\n        width={{\n          _: '100%',\n          sm: '90%',\n        }}\n      >\n        {data.map((d: Record<string, any>) => (\n          <Item key={d.id} href={d.html_url} target=\"_blank\">\n            <Image alt={d.owner.login} src={d.owner.avatar_url} />\n            <ItemHeader>\n              <Heading as=\"h5\" h={100} lineHeight={1}>\n                {d.name}\n              </Heading>\n              <small>{d.owner.login}</small>\n            </ItemHeader>\n            <Paragraph>{d.description}</Paragraph>\n          </Item>\n        ))}\n      </Grid>\n    ) : (\n      <h3>Nothing found</h3>\n    );\n  } else {\n    output = <Loader block />;\n  }\n\n  return (\n    <div key=\"GitHub\" data-testid=\"GitHubWrapper\">\n      <Flex justifyContent=\"center\">\n        <ButtonGroup aria-label=\"GitHub Selector\" data-testid=\"GitHubSelector\" role=\"group\">\n          <Button\n            busy={query === 'react' && isRunning}\n            data-value=\"react\"\n            invert={query !== 'react'}\n            onClick={handleClick}\n            size=\"lg\"\n          >\n            React\n          </Button>\n          <Button\n            busy={query === 'redux' && isRunning}\n            data-value=\"redux\"\n            invert={query !== 'redux'}\n            onClick={handleClick}\n            size=\"lg\"\n          >\n            Redux\n          </Button>\n        </ButtonGroup>\n      </Flex>\n      {output}\n    </div>\n  );\n}\n\nexport default GitHub;\n"]},"metadata":{},"sourceType":"module"}