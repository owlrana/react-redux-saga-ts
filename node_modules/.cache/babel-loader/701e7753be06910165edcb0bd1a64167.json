{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Alert as AlertComponent, Box } from 'styled-minimal';\nimport { spacer, variants } from 'modules/theme';\nimport Icon from 'components/Icon';\nAlertComponent.displayName = 'AlertComponent';\nconst AlertIcon = styled.div.withConfig({\n  displayName: \"AlertIcon\",\n  componentId: \"sc-l5l6k6-0\"\n})([\"align-items:flex-start;background-color:\", \";color:#fff;display:flex;\"], _ref => {\n  let {\n    variant\n  } = _ref;\n  return variants[variant];\n});\n_c = AlertIcon;\nconst AlertButton = styled.button.withConfig({\n  displayName: \"AlertButton\",\n  componentId: \"sc-l5l6k6-1\"\n})([\"background-color:\", \";color:#fff;line-height:0;pointer-events:all;position:absolute;right:\", \";top:\", \";\"], _ref2 => {\n  let {\n    variant\n  } = _ref2;\n  return variants[variant];\n}, spacer(1), spacer(1));\n_c2 = AlertButton;\n\nfunction Alert(_ref3) {\n  let {\n    children,\n    handleClickClose,\n    icon,\n    id,\n    variant = 'gray',\n    ...rest\n  } = _ref3;\n  const output = {};\n  let name;\n\n  switch (variant) {\n    case 'success':\n      {\n        name = icon || 'check-circle';\n        break;\n      }\n\n    case 'warning':\n      {\n        name = icon || 'exclamation-circle';\n        break;\n      }\n\n    case 'danger':\n      {\n        name = icon || 'times-circle';\n        break;\n      }\n\n    case 'info':\n      {\n        name = icon || 'question-circle';\n        break;\n      }\n\n    case 'dark':\n      {\n        name = icon || 'bell-o';\n        break;\n      }\n\n    default:\n      {\n        name = icon || 'dot-circle-o';\n      }\n  }\n\n  if (handleClickClose) {\n    output.button = /*#__PURE__*/React.createElement(AlertButton, {\n      \"data-id\": id,\n      onClick: handleClickClose,\n      type: \"button\",\n      variant: variant\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"times\",\n      width: 10\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(AlertComponent, _extends({}, rest, {\n    alignItems: \"center\",\n    \"data-testid\": \"Alert\",\n    display: \"flex\",\n    position: \"relative\",\n    variant: variant\n  }), /*#__PURE__*/React.createElement(AlertIcon, _extends({\n    variant: variant\n  }, rest), /*#__PURE__*/React.createElement(Icon, {\n    name: name,\n    width: 24\n  })), /*#__PURE__*/React.createElement(Box, {\n    pl: handleClickClose ? 3 : 2\n  }, children), output.button);\n}\n\n_c3 = Alert;\nexport default Alert;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AlertIcon\");\n$RefreshReg$(_c2, \"AlertButton\");\n$RefreshReg$(_c3, \"Alert\");","map":{"version":3,"sources":["/Users/rahulrana/react-redux-saga-boilerplate/src/components/Alert.tsx"],"names":["React","styled","Alert","AlertComponent","Box","spacer","variants","Icon","displayName","AlertIcon","div","variant","AlertButton","button","children","handleClickClose","icon","id","rest","output","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAK,IAAIC,cAAlB,EAAkCC,GAAlC,QAA6C,gBAA7C;AAGA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,eAAjC;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AAYAJ,cAAc,CAACK,WAAf,GAA6B,gBAA7B;AAEA,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,8EAEO;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAwCL,QAAQ,CAACK,OAAD,CAAhD;AAAA,CAFP,CAAf;KAAMF,S;AAON,MAAMG,WAAW,GAAGX,MAAM,CAACY,MAAV;AAAA;AAAA;AAAA,iHACK;AAAA,MAAC;AAAEF,IAAAA;AAAF,GAAD;AAAA,SAAwCL,QAAQ,CAACK,OAAD,CAAhD;AAAA,CADL,EAMNN,MAAM,CAAC,CAAD,CANA,EAORA,MAAM,CAAC,CAAD,CAPE,CAAjB;MAAMO,W;;AAUN,SAASV,KAAT,QAA2F;AAAA,MAA5E;AAAEY,IAAAA,QAAF;AAAYC,IAAAA,gBAAZ;AAA8BC,IAAAA,IAA9B;AAAoCC,IAAAA,EAApC;AAAwCN,IAAAA,OAAO,GAAG,MAAlD;AAA0D,OAAGO;AAA7D,GAA4E;AACzF,QAAMC,MAA2B,GAAG,EAApC;AACA,MAAIC,IAAJ;;AAEA,UAAQT,OAAR;AACE,SAAK,SAAL;AAAgB;AACdS,QAAAA,IAAI,GAAGJ,IAAI,IAAI,cAAf;AACA;AACD;;AACD,SAAK,SAAL;AAAgB;AACdI,QAAAA,IAAI,GAAGJ,IAAI,IAAI,oBAAf;AACA;AACD;;AACD,SAAK,QAAL;AAAe;AACbI,QAAAA,IAAI,GAAGJ,IAAI,IAAI,cAAf;AACA;AACD;;AACD,SAAK,MAAL;AAAa;AACXI,QAAAA,IAAI,GAAGJ,IAAI,IAAI,iBAAf;AACA;AACD;;AACD,SAAK,MAAL;AAAa;AACXI,QAAAA,IAAI,GAAGJ,IAAI,IAAI,QAAf;AACA;AACD;;AACD;AAAS;AACPI,QAAAA,IAAI,GAAGJ,IAAI,IAAI,cAAf;AACD;AAvBH;;AA0BA,MAAID,gBAAJ,EAAsB;AACpBI,IAAAA,MAAM,CAACN,MAAP,gBACE,oBAAC,WAAD;AAAa,iBAASI,EAAtB;AAA0B,MAAA,OAAO,EAAEF,gBAAnC;AAAqD,MAAA,IAAI,EAAC,QAA1D;AAAmE,MAAA,OAAO,EAAEJ;AAA5E,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,KAAK,EAAE;AAA1B,MADF,CADF;AAKD;;AAED,sBACE,oBAAC,cAAD,eACMO,IADN;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,mBAAY,OAHd;AAIE,IAAA,OAAO,EAAC,MAJV;AAKE,IAAA,QAAQ,EAAC,UALX;AAME,IAAA,OAAO,EAAEP;AANX,mBAQE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEA;AAApB,KAAiCO,IAAjC,gBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEE,IAAZ;AAAkB,IAAA,KAAK,EAAE;AAAzB,IADF,CARF,eAWE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAEL,gBAAgB,GAAG,CAAH,GAAO;AAAhC,KAAoCD,QAApC,CAXF,EAYGK,MAAM,CAACN,MAZV,CADF;AAgBD;;MAtDQX,K;AAwDT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Alert as AlertComponent, Box } from 'styled-minimal';\nimport { Variants } from 'styled-minimal/lib/types';\n\nimport { spacer, variants } from 'modules/theme';\n\nimport Icon from 'components/Icon';\n\nimport { Icons } from 'types';\n\ninterface Props {\n  children: React.ReactNode;\n  handleClickClose?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  icon?: Icons;\n  id?: string;\n  variant?: string;\n}\n\nAlertComponent.displayName = 'AlertComponent';\n\nconst AlertIcon = styled.div`\n  align-items: flex-start;\n  background-color: ${({ variant }: { variant: Variants }) => variants[variant]};\n  color: #fff;\n  display: flex;\n`;\n\nconst AlertButton = styled.button`\n  background-color: ${({ variant }: { variant: Variants }) => variants[variant]};\n  color: #fff;\n  line-height: 0;\n  pointer-events: all;\n  position: absolute;\n  right: ${spacer(1)};\n  top: ${spacer(1)};\n`;\n\nfunction Alert({ children, handleClickClose, icon, id, variant = 'gray', ...rest }: Props) {\n  const output: Record<string, any> = {};\n  let name: Icons;\n\n  switch (variant) {\n    case 'success': {\n      name = icon || 'check-circle';\n      break;\n    }\n    case 'warning': {\n      name = icon || 'exclamation-circle';\n      break;\n    }\n    case 'danger': {\n      name = icon || 'times-circle';\n      break;\n    }\n    case 'info': {\n      name = icon || 'question-circle';\n      break;\n    }\n    case 'dark': {\n      name = icon || 'bell-o';\n      break;\n    }\n    default: {\n      name = icon || 'dot-circle-o';\n    }\n  }\n\n  if (handleClickClose) {\n    output.button = (\n      <AlertButton data-id={id} onClick={handleClickClose} type=\"button\" variant={variant}>\n        <Icon name=\"times\" width={10} />\n      </AlertButton>\n    );\n  }\n\n  return (\n    <AlertComponent\n      {...rest}\n      alignItems=\"center\"\n      data-testid=\"Alert\"\n      display=\"flex\"\n      position=\"relative\"\n      variant={variant}\n    >\n      <AlertIcon variant={variant} {...rest}>\n        <Icon name={name} width={24} />\n      </AlertIcon>\n      <Box pl={handleClickClose ? 3 : 2}>{children}</Box>\n      {output.button}\n    </AlertComponent>\n  );\n}\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}