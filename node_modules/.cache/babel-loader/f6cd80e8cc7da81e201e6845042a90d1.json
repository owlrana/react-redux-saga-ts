{"ast":null,"code":"import { now } from '@gilbarbara/helpers';\nimport { createAction } from '@reduxjs/toolkit';\nimport { REHYDRATE } from 'redux-persist';\nexport function actionPayload(payload, meta) {\n  return {\n    payload,\n    meta\n  };\n}\n/**\n * Check if cache is valid\n */\n\nexport function hasValidCache(lastUpdated) {\n  let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n\n  if (!navigator.onLine) {\n    return true;\n  }\n\n  return lastUpdated + max * 60 > now();\n}\nexport const rehydrateAction = createAction(REHYDRATE);","map":{"version":3,"sources":["/Users/rahulrana/react-redux-saga-ts/src/modules/helpers.ts"],"names":["now","createAction","REHYDRATE","actionPayload","payload","meta","hasValidCache","lastUpdated","max","navigator","onLine","rehydrateAction"],"mappings":"AAAA,SAASA,GAAT,QAAoB,qBAApB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,SAAT,QAA0B,eAA1B;AAIA,OAAO,SAASC,aAAT,CAA4DC,OAA5D,EAAwEC,IAAxE,EAAkF;AACvF,SAAO;AAAED,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,WAAvB,EAA+D;AAAA,MAAnBC,GAAmB,uEAAb,EAAa;;AACpE,MAAI,CAACC,SAAS,CAACC,MAAf,EAAuB;AACrB,WAAO,IAAP;AACD;;AAED,SAAOH,WAAW,GAAGC,GAAG,GAAG,EAApB,GAAyBR,GAAG,EAAnC;AACD;AAED,OAAO,MAAMW,eAAe,GAAGV,YAAY,CAAYC,SAAZ,CAApC","sourcesContent":["import { now } from '@gilbarbara/helpers';\nimport { createAction } from '@reduxjs/toolkit';\nimport { REHYDRATE } from 'redux-persist';\n\nimport { RootState } from 'types';\n\nexport function actionPayload<T = any, M = Record<string, string>>(payload: T, meta?: M) {\n  return { payload, meta };\n}\n\n/**\n * Check if cache is valid\n */\nexport function hasValidCache(lastUpdated: number, max = 10): boolean {\n  if (!navigator.onLine) {\n    return true;\n  }\n\n  return lastUpdated + max * 60 > now();\n}\n\nexport const rehydrateAction = createAction<RootState>(REHYDRATE);\n"]},"metadata":{},"sourceType":"module"}