import * as React from 'react';
import { ThemeConsumer } from 'styled-components';

import { getMutation, getTheme } from './utils/helpers';
import { Box } from './Box';

function MutationWrapper(props: any): React.ReactElement {
  const { children, display, variant } = props;
  return (
    <ThemeConsumer>
      {(theme) => {
        const {
          borderColor,
          borderWidth,
          complexity,
          height,
          mutation,
          seed,
          width,
          ...rest
        } = getMutation({ ...props, theme }, props.skipTheme);
        const { borderColor: themeBorderColor } = getTheme(theme);

        if (mutation) {
          return (
            <Box
              bg={variant || borderColor || themeBorderColor}
              display={display}
              p={borderWidth || '1px'}
              css={rest}
              mutation={mutation}
              complexity={complexity}
              seed={seed}
            >
              {children}
            </Box>
          );
        }

        return children!;
      }}
    </ThemeConsumer>
  );
}

export default MutationWrapper;
