export type ButtonTypes = 'button' | 'submit' | 'reset';
export type InputTypes =
  | 'color'
  | 'date'
  | 'email'
  | 'file'
  | 'hidden'
  | 'number'
  | 'password'
  | 'search'
  | 'tel'
  | 'text';
export type NumberOrString = number | string;
export type Sizes = 'sm' | 'md' | 'lg';
export type SizesAll = 'xs' | 'sm' | 'md' | 'lg' | 'xl';

export type MutationRate = number;
export type MutationHeight = number;
export type MutationWidth = number;

export interface MutationProps {
  /** The number of points */
  complexity?: number;
  /** Mutate the shape */
  mutation?: number | [MutationRate, MutationWidth, MutationHeight];
  seed?: NumberOrString;
}

export interface MutationResponse {
  /** Mutate the shape */
  borderColor?: string;
  borderWidth?: NumberOrString;
  complexity?: number;
  height?: number;
  mutation?: number;
  seed?: NumberOrString;
  width?: number;
}

export interface GenericObject {
  [key: string]: any;
}

export type RecursivePartial<T> = {
  [K in keyof T]?: T[K] extends Array<infer R>
    ? Array<RecursivePartial<R>>
    : RecursivePartial<T[K]>;
};
