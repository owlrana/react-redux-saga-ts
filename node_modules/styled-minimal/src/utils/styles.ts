import {
  background,
  border,
  color,
  compose,
  display,
  flexbox,
  grid,
  height,
  maxHeight,
  maxWidth,
  minHeight,
  minWidth,
  overflow,
  // @ts-ignore
  overflowX,
  // @ts-ignore
  overflowY,
  position,
  space,
  styleFn,
  system,
  typography,
  verticalAlign,
  width,
} from 'styled-system';

const layout: styleFn = compose(
  display,
  height,
  maxHeight,
  maxWidth,
  minHeight,
  minWidth,
  overflow,
  overflowX,
  overflowY,
  verticalAlign,
  width,
);

export const animation = system({
  animation: true,
  animationDelay: true,
  animationDirection: true,
  animationDuration: true,
  animationFillMode: true,
  animationIterationCount: true,
  animationName: true,
  animationPlayState: true,
  animationTimingFunction: true,
});

export const boxShadow = system({
  boxShadow: true,
});

export const cursor = system({
  cursor: true,
});

export const filter = system({
  filter: true,
});

export const outlines = system({
  outline: true,
  outlineColor: true,
  outlineOffset: true,
  outlineStyle: true,
  outlineWidth: true,
});

const shorthands = system({
  cl: {
    property: 'color',
    scale: 'colors',
  },
  h: {
    property: 'height',
  },
  w: {
    property: 'height',
  },
});

export const textDecoration = system({
  textDecoration: true,
});

export const textTransform = system({
  textTransform: true,
});

export const transformProps = system({
  backfaceVisibility: true,
  perspective: true,
  perspectiveOrigin: true,
  rotate: true,
  scale: true,
  transform: true,
  transformOrigin: true,
  transition: true,
});

export const styleSystem = compose(
  animation,
  background,
  border,
  boxShadow,
  color,
  cursor,
  filter,
  flexbox,
  grid,
  layout,
  outlines,
  position,
  shorthands,
  space,
  typography,
  textDecoration,
  textTransform,
  transformProps,
);
