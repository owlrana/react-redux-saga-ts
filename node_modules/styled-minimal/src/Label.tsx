import * as React from 'react';
import styled, { css } from 'styled-components';

import { getTheme, px } from './utils/helpers';
import { baseStyles, lineHeightStyles, sx, system } from './utils/system';

import { LabelProps } from './types';
import { StyledText, Text } from './Text';

export const StyledLabel = styled('label')<LabelProps>(
  (props) => {
    const { inline } = props;
    const { color, fontWeight, inlineFontSize, marginBottom } = getTheme(props, 'label');

    return css`
      ${baseStyles};
      align-items: center;
      color: ${color};
      cursor: pointer;
      display: flex;
      font-family: inherit;
      ${inline ? `font-size: ${px(inlineFontSize)}` : ''};
      font-weight: ${fontWeight};
      line-height: ${lineHeightStyles};
      ${!inline ? `margin-bottom: ${px(marginBottom)}` : ''};
      white-space: nowrap;

      ${StyledText} {
        margin-left: 6px;
      }
    `;
  },
  sx,
  system,
);

export const Label = React.forwardRef<HTMLLabelElement, LabelProps>((props, ref) => {
  const { children, labelId, labelInfo } = props;
  return (
    <StyledLabel ref={ref} {...props} htmlFor={labelId}>
      {children}
      {!!labelInfo && <Text muted>{labelInfo}</Text>}
    </StyledLabel>
  );
});

Label.defaultProps = {
  inline: false,
};
