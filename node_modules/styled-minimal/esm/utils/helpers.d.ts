import { CSSObject } from '@styled-system/css';
import { Breakpoints, CommonProps, MediaQueries, NumberOrString, GenericObject, MutationResponse, RecursivePartial, ResponsiveObject, ResponsiveSizes, Theme } from '../types';
/**
 * Generate the media query
 */
export declare function createMediaQuery(size: ResponsiveSizes, mediaQueries: MediaQueries): string;
/**
 * Get color from theme
 */
export declare function getColor(props: CommonProps, { base, includeColor }?: {
    base?: string | undefined;
    includeColor?: boolean | undefined;
}): string;
export declare function getDarkColor(props: CommonProps): string;
export declare function getAccentColor(color: string, lighter?: boolean): string;
export declare function getMediaQueries(breakpoints: Breakpoints): MediaQueries;
export declare function getMutation(props: CommonProps, skipTheme: boolean): MutationResponse;
/**
 * Get percentage of positive numbers
 */
export declare function getPercentage(input: number, total: number): number;
export declare function getProps(props?: any): any;
export declare function getRandomInt(min?: number, max?: number, random?: number): number;
export declare function getReadableColor(baseColor: string, color: string): string;
export declare function getStyles(props: CommonProps): CSSObject;
export declare function getTextColor(props: CommonProps): string;
/**
 * Get the merged theme
 */
export declare function getTheme<T extends CommonProps>(props: T, path?: keyof Theme): any;
/**
 * Color contrast
 */
export declare function getYiq(color: string): number;
/** Check if a variable is a boolean **/
export declare function isBoolean(value: unknown): value is boolean;
export declare function isCSSUnit(value: unknown): value is string;
/** Check if a variable is defined **/
export declare function isDefined(value: unknown): boolean;
/** Check if a variable is a number **/
export declare function isNumber(value: unknown): value is number;
export declare function isNumericString(value: unknown): value is string;
export declare function isString(value: unknown): value is string;
export declare function limitNumber(num: number, min?: number, max?: number): number;
export declare function pick(props: any): GenericObject;
/** Get textual unit value */
export declare function px(value: NumberOrString): string;
/**
 * Merge ThemeProvides's theme with the default theme
 */
export declare function mergeTheme(theme?: RecursivePartial<Theme>): Theme;
export declare function parseNumericCSSProp(value: NumberOrString): number;
/**
 * SC Helper to generate responsive media queries1
 */
export declare function responsive(rules: ResponsiveObject): (props: CommonProps) => import("@styled-system/css").CssFunctionReturnType;
export declare function replaceShorthands(styles: CSSObject): CSSObject;
/**
 * Helper to get the corresponding item from the space scale
 */
export declare function spacer(value: NumberOrString): (props: CommonProps) => string;
export declare function whitelist(input: GenericObject, entries: string[]): GenericObject;
