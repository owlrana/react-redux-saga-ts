import { background, border, color, compose, display, flexbox, grid, height, maxHeight, maxWidth, minHeight, minWidth, overflow, 
// @ts-ignore
overflowX, 
// @ts-ignore
overflowY, position, space, system, typography, verticalAlign, width, } from 'styled-system';
var layout = compose(display, height, maxHeight, maxWidth, minHeight, minWidth, overflow, overflowX, overflowY, verticalAlign, width);
export var animation = system({
    animation: true,
    animationDelay: true,
    animationDirection: true,
    animationDuration: true,
    animationFillMode: true,
    animationIterationCount: true,
    animationName: true,
    animationPlayState: true,
    animationTimingFunction: true,
});
export var boxShadow = system({
    boxShadow: true,
});
export var cursor = system({
    cursor: true,
});
export var filter = system({
    filter: true,
});
export var outlines = system({
    outline: true,
    outlineColor: true,
    outlineOffset: true,
    outlineStyle: true,
    outlineWidth: true,
});
var shorthands = system({
    cl: {
        property: 'color',
        scale: 'colors',
    },
    h: {
        property: 'height',
    },
    w: {
        property: 'height',
    },
});
export var textDecoration = system({
    textDecoration: true,
});
export var textTransform = system({
    textTransform: true,
});
export var transformProps = system({
    backfaceVisibility: true,
    perspective: true,
    perspectiveOrigin: true,
    rotate: true,
    scale: true,
    transform: true,
    transformOrigin: true,
    transition: true,
});
export var styleSystem = compose(animation, background, border, boxShadow, color, cursor, filter, flexbox, grid, layout, outlines, position, shorthands, space, typography, textDecoration, textTransform, transformProps);
//# sourceMappingURL=styles.js.map