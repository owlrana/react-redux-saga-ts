var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import styled, { css } from 'styled-components';
import { getTheme, px } from './utils/helpers';
import { baseStyles, appearanceStyles, sx, system } from './utils/system';
import { Legend, StyledLegend } from './Legend';
export var StyledFieldset = styled('fieldset')(function (props) {
    var _a = getTheme(props, 'fieldset'), borderColor = _a.borderColor, borderRadius = _a.borderRadius, padding = _a.padding, marginBottom = _a.marginBottom;
    return css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n      ", ";\n      ", ";\n      background-color: #fff;\n      border: 1px solid ", ";\n      border-radius: ", ";\n      margin-bottom: ", ";\n      padding: ", ";\n      text-align: left;\n\n      ", " {\n        margin: 0;\n      }\n    "], ["\n      ", ";\n      ", ";\n      background-color: #fff;\n      border: 1px solid ", ";\n      border-radius: ", ";\n      margin-bottom: ", ";\n      padding: ", ";\n      text-align: left;\n\n      ", " {\n        margin: 0;\n      }\n    "])), baseStyles, appearanceStyles, borderColor, px(borderRadius), px(marginBottom), px(padding), StyledLegend);
}, sx, system);
export var Fieldset = React.forwardRef(function (_a, ref) {
    var children = _a.children, label = _a.label, rest = __rest(_a, ["children", "label"]);
    return (React.createElement(StyledFieldset, __assign({ ref: ref }, rest),
        label && React.createElement(Legend, null, label),
        children));
});
var templateObject_1;
//# sourceMappingURL=Fieldset.js.map