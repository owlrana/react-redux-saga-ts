var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import styled, { css } from 'styled-components';
import { spacer } from './utils/helpers';
import { baseStyles, sx, system } from './utils/system';
export var StyledGroup = styled('div')(function (_a) {
    var gap = _a.gap;
    return css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    ", ";\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n\n    > *:not(:first-child) {\n      margin-left: ", ";\n    }\n  "], ["\n    ", ";\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n\n    > *:not(:first-child) {\n      margin-left: ", ";\n    }\n  "])), baseStyles, spacer(gap));
}, sx, system);
/**
 * Group components with a gap between them
 */
export var Group = React.forwardRef(function (props, ref) { return (React.createElement(StyledGroup, __assign({ ref: ref }, props))); });
Group.defaultProps = {
    gap: 2,
};
var templateObject_1;
//# sourceMappingURL=Group.js.map