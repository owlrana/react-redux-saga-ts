var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import styled, { css } from 'styled-components';
import { responsive, spacer } from './utils/helpers';
import { baseStyles, sx, system } from './utils/system';
export var StyledContainer = styled('div')(function (props) {
    var ySpacing = props.ySpacing, fullScreen = props.fullScreen;
    var ySpacingStyles;
    var fullScreenStyles;
    if (ySpacing) {
        ySpacingStyles = css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n        padding-bottom: ", ";\n        padding-top: ", ";\n\n        ", ";\n      "], ["\n        padding-bottom: ", ";\n        padding-top: ", ";\n\n        ",
            ";\n      "])), spacer(3), spacer(3), responsive({
            lg: {
                paddingBottom: spacer(4)(props),
                paddingTop: spacer(4)(props),
            },
        }));
    }
    if (fullScreen) {
        fullScreenStyles = css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n        align-items: center;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        min-height: 100vh;\n      "], ["\n        align-items: center;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        min-height: 100vh;\n      "])));
    }
    return css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n      ", ";\n      margin-left: auto;\n      margin-right: auto;\n      padding-left: ", ";\n      padding-right: ", ";\n      position: relative;\n      width: 100%;\n      ", ";\n      ", ";\n      ", ";\n    "], ["\n      ", ";\n      margin-left: auto;\n      margin-right: auto;\n      padding-left: ", ";\n      padding-right: ", ";\n      position: relative;\n      width: 100%;\n      ", ";\n      ", ";\n      ",
        ";\n    "])), baseStyles, spacer(3), spacer(3), fullScreenStyles, ySpacingStyles, responsive({
        lg: {
            paddingLeft: spacer(4)(props),
            paddingRight: spacer(4)(props),
        },
    }));
}, sx, system);
export var Container = React.forwardRef(function (props, ref) { return (React.createElement(StyledContainer, __assign({ ref: ref }, props))); });
Container.defaultProps = {
    fullScreen: false,
    ySpacing: false,
};
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=Container.js.map