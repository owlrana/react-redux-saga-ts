var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import styled, { css, keyframes } from 'styled-components';
import { getColor, px } from './utils/helpers';
import { sx, system } from './utils/system';
var bounce = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  0%, 100% { \n    transform: scale(0);\n  }\n  50% { \n    transform: scale(1);\n  }\n"], ["\n  0%, 100% { \n    transform: scale(0);\n  }\n  50% { \n    transform: scale(1);\n  }\n"])));
export var StyledLoader = styled('div')(function (props) {
    var color = props.color, delay = props.delay, opacity = props.opacity, size = props.size, speed = props.speed;
    return css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n      box-sizing: border-box;\n      height: ", ";\n      position: relative;\n      width: ", ";\n\n      > div {\n        animation: ", " ", "s infinite ease-in-out;\n        background-color: ", ";\n        ", ";\n        border-radius: 50%;\n        height: 100%;\n        left: 0;\n        opacity: ", ";\n        position: absolute;\n        top: 0;\n        width: 100%;\n\n        &:last-of-type {\n          animation-delay: -", "s;\n        }\n      }\n    "], ["\n      box-sizing: border-box;\n      height: ", ";\n      position: relative;\n      width: ", ";\n\n      > div {\n        animation: ", " ", "s infinite ease-in-out;\n        background-color: ", ";\n        ", ";\n        border-radius: 50%;\n        height: 100%;\n        left: 0;\n        opacity: ", ";\n        position: absolute;\n        top: 0;\n        width: 100%;\n\n        &:last-of-type {\n          animation-delay: -", "s;\n        }\n      }\n    "])), px(size), px(size), bounce, speed, getColor, color && "background-color: " + color, opacity, delay || speed / 2);
}, sx, system);
export var Loader = React.forwardRef(function (props, ref) { return (React.createElement(StyledLoader, __assign({ ref: ref }, props),
    React.createElement("div", null),
    React.createElement("div", null))); });
Loader.defaultProps = {
    opacity: 0.7,
    size: 32,
    speed: 2,
    variant: 'primary',
};
var templateObject_1, templateObject_2;
//# sourceMappingURL=Loader.js.map