var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import styled, { css } from 'styled-components';
import { getTheme, px } from './utils/helpers';
import { baseStyles, mutationStyles, sx, system } from './utils/system';
import MutationWrapper from './MutationWrapper';
export var StyledForm = styled('form')(function (props) {
    var frame = props.frame;
    var _a = getTheme(props, 'form'), borderColor = _a.borderColor, borderRadius = _a.borderRadius, padding = _a.padding;
    return css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n      ", ";\n      background-color: #fff;\n      ", "\n      ", "\n      ", "\n      ", ";\n    "], ["\n      ", ";\n      background-color: #fff;\n      ", "\n      ", "\n      ", "\n      ", ";\n    "])), baseStyles, frame ? "border: 1px solid " + borderColor + ";" : '', frame ? "border-radius: " + px(borderRadius) + ";" : '', frame ? "padding: " + px(padding) + ";" : '', frame ? mutationStyles({ skipTheme: true }) : '');
}, sx, system);
export var Form = React.forwardRef(function (props, ref) {
    var frame = props.frame;
    var form = React.createElement(StyledForm, __assign({ ref: ref }, props));
    if (frame) {
        return (React.createElement(MutationWrapper, __assign({}, props, { skipTheme: true }), form));
    }
    return form;
});
Form.defaultProps = {
    frame: false,
    method: 'get',
};
var templateObject_1;
//# sourceMappingURL=Form.js.map