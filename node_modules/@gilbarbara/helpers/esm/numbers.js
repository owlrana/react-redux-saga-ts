/**
 * Ceil decimal numbers
 */
export function ceil(input, digits) {
    if (digits === void 0) { digits = 2; }
    var factor = Math.pow(10, digits);
    return Math.ceil(input * factor) / factor;
}
/**
 * Floor decimal numbers
 */
export function floor(input, digits) {
    if (digits === void 0) { digits = 2; }
    var factor = Math.pow(10, digits);
    return Math.floor(input * factor) / factor;
}
/**
 * Pad a number with zeros
 */
export function pad(input, length) {
    if (length === void 0) { length = 2; }
    return "".concat(input).padStart(length, '0');
}
/**
 * Returns a random integer
 */
export function randomInt(min, max) {
    if (min === void 0) { min = 0; }
    if (max === void 0) { max = 10; }
    if (min >= max) {
        return max;
    }
    return Math.floor(Math.random() * (max - min + 1) + min);
}
/**
 * Limit number between range
 */
export function rangeLimit(value, min, max) {
    if (min === void 0) { min = 0; }
    if (max === void 0) { max = 100; }
    return Math.min(Math.max(value, min), max);
}
/**
 * Round decimal numbers
 */
export function round(input, digits) {
    if (digits === void 0) { digits = 2; }
    var factor = Math.pow(10, digits);
    return Math.round(input * factor) / factor;
}
//# sourceMappingURL=numbers.js.map