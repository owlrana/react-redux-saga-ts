import { useEffect, useRef } from 'react';
import equal from '@gilbarbara/deep-equal';
import treeChanges from 'tree-changes';
export default function useTreeChanges(value) {
    var previousValue = useRef(value);
    var isEqual = equal(previousValue.current, value);
    var previousIsEqual = useRef(isEqual);
    var instance = useRef(treeChanges(previousValue.current, value));
    useEffect(function () {
        previousValue.current = value;
    });
    if (previousIsEqual.current !== isEqual || !isEqual) {
        previousIsEqual.current = isEqual;
        instance.current = treeChanges(previousValue.current, value);
    }
    return instance.current;
}
// eslint-disable-next-line unicorn/prefer-export-from
export { treeChanges };
export * from 'tree-changes';
//# sourceMappingURL=index.js.map